{"ast":null,"code":"var _jsxFileName = \"/home/deko/Documentos/reposit\\xF3rio/dekopossas.github.io/exercises/12_2/aula12_2/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport colors from './data.js';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.handledChange = this.handledChange.bind(this);\n    this.state = {\n      filterText: \"\",\n      xablauClicks: 0\n    };\n  }\n\n  handleClick() {\n    this.setState((estado, _props) => ({\n      xablauClicks: estado.xablauClicks + 1\n    }));\n  }\n\n  handledChange(event) {\n    this.setState({\n      filterText: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handledChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 3\n      }\n    }, this.state.xablauClicks, \"Xablaus!\"), colors.filter(color => color.name === this.state.filterText).map((color, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 94\n      }\n    }, color.name)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/deko/Documentos/repositÃ³rio/dekopossas.github.io/exercises/12_2/aula12_2/src/App.js"],"names":["React","colors","App","Component","constructor","handledChange","bind","state","filterText","xablauClicks","handleClick","setState","estado","_props","event","target","value","render","filter","color","name","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,CAAc,CAACC,MAAD,EAASC,MAAT,MAAqB;AAACJ,MAAAA,YAAY,EAAEG,MAAM,CAACH,YAAP,GAAsB;AAArC,KAArB,CAAd;AACD;;AAEDJ,EAAAA,aAAa,CAACS,KAAD,EAAQ;AACnB,SAAKH,QAAL,CAAc;AAAEH,MAAAA,UAAU,EAAEM,KAAK,CAACC,MAAN,CAAaC;AAA3B,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKZ,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADK,eAET;AAAQ,MAAA,OAAO,EAAE,KAAKK,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,KAAKH,KAAL,CAAWE,YAA/C,aAFS,EAGJR,MAAM,CAACiB,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACC,IAAN,KAAe,KAAKb,KAAL,CAAWC,UAAnD,EAA+Da,GAA/D,CAAmE,CAACF,KAAD,EAAQG,KAAR,kBAAmB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBH,KAAK,CAACC,IAAxB,CAAtF,CAHI,CAAP;AAKD;;AA1B+B;;AA6BlC,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport colors from './data.js';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handledChange = this.handledChange.bind(this);\n\n    this.state = {\n      filterText: \"\",\n      xablauClicks: 0,\n    }\n  }\n\n  handleClick() {\n    this.setState((estado, _props) => ({xablauClicks: estado.xablauClicks + 1 }));\n  }\n\n  handledChange(event) {\n    this.setState({ filterText: event.target.value });\n  }\n\n  render () {\n    return <div>\n      <div><input type=\"text\" onChange={this.handledChange} /></div>\n  <button onClick={this.handleClick}>{this.state.xablauClicks}Xablaus!</button>\n      {colors.filter((color) => color.name === this.state.filterText).map((color, index) => (<div key={index}>{color.name}</div>))}\n    </div>\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}